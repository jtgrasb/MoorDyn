name: CMake for 3 systems

on:
  workflow_dispatch:
    inputs:
      os:
        description: 'Host OS'
        required: false
        type: string
        default: '["ubuntu-22.04"]'
  pull_request:      # Triggers the workflow on pull request events

permissions: write-all

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-windows:
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: [windows-latest]
    steps:
    - uses: actions/checkout@v4
      with:
       repository: 'FloatingArrayDesign/MoorDyn'

    - name: moordyn_version
      id: moordyn_version
      shell: bash
      run: |
        major=`cat CMakeLists.txt | grep MOORDYN_MAJOR_VERSION | head -1 | awk -F' ' '{print $2}' | awk -F')' '{print $1}'`
        minor=`cat CMakeLists.txt | grep MOORDYN_MINOR_VERSION | head -1 | awk -F' ' '{print $2}' | awk -F')' '{print $1}'`
        patch=`cat CMakeLists.txt | grep MOORDYN_PATCH_VERSION | head -1 | awk -F' ' '{print $2}' | awk -F')' '{print $1}'`
        echo "moordyn_version=$major.$minor.$patch" >> $GITHUB_OUTPUT

    - name: Configure CMake (Windows), build, and install
      run: |
        mkdir -p ${{ github.workspace }}/install-${{ matrix.os }}
        cmake -B ${{github.workspace}}/build-${{ matrix.os }} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DEXTERNAL_EIGEN:BOOL=OFF -DPYTHON_WRAPPER:BOOL=OFF -DFORTRAN_WRAPPER:BOOL=OFF -DRUST_WRAPPER:BOOL=OFF -DUSE_VTK=OFF -DMOORDYN_PACKAGE_IGNORE_VTK_DEPENDENCY=ON -DBUILD_TESTING=OFF
        cmake --build ${{ github.workspace }}/build-${{ matrix.os }} --config ${{env.BUILD_TYPE}}
        cmake --install ${{ github.workspace }}/build-${{ matrix.os }} --config ${{env.BUILD_TYPE}} 

    - name: Set $PATH (Windows)
      run: Add-Content $env:GITHUB_PATH "${{github.workspace}}\install\bin"

    - name: Rename moordyn.dll to libmoordyn.dll
      run: |
        mkdir -p ${{ github.workspace }}/generated_files
        mv "${{ github.workspace }}/install/bin/moordyn.dll" "${{ github.workspace }}/generated_files/libmoordyn.dll"

    - name: List generated files
      run: |
        echo "Contents of generated_files:"
        ls ${{ github.workspace }}/generated_files

    - name: Upload generated files - Windows
      uses: actions/upload-artifact@v4
      with:
        name: generated-libraries-windows
        path: |
          ${{github.workspace}}/generated_files/**

  build-macos:
    needs: [build-windows]
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: [macos-latest]
            arch: ["x86_64", "arm64"]
    steps:
    - uses: actions/checkout@v4
      with:
       repository: 'FloatingArrayDesign/MoorDyn'

    - name: Configure CMake (MacOS), build, and install
      run: |
        mkdir -p ${{ github.workspace }}/install-${{ matrix.os }}
        cmake -B ${{github.workspace}}/build-${{ matrix.os }} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install-${{ matrix.os }} -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DEXTERNAL_EIGEN:BOOL=OFF -DPYTHON_WRAPPER:BOOL=OFF -DFORTRAN_WRAPPER:BOOL=OFF -DRUST_WRAPPER:BOOL=OFF -DUSE_VTK=OFF -DBUILD_TESTING=OFF
        cmake --build ${{ github.workspace }}/build-${{ matrix.os }} --config ${{env.BUILD_TYPE}}
        cmake --install ${{ github.workspace }}/build-${{ matrix.os }} --config ${{env.BUILD_TYPE}} 

    - name: Create Installer
      working-directory: ${{ github.workspace }}/build-${{ matrix.os }}
      shell: bash
      # Package the installer
      run: cpack -C ${{env.BUILD_TYPE}}

    - name: Test - list install/lib folder-mac
      working-directory: ${{github.workspace}}/install-${{ matrix.os }}/lib
      # We are just testing in Linux
      run: 
        ls

    - name: Upload generated files - MacOS
      uses: actions/upload-artifact@v4
      with:
        name: generated-libraries-macos
        path: |
          ${{github.workspace}}/install-${{ matrix.os }}/lib/*libmoordyn*
      if: runner.os == 'MacOS'

  build-linux:
    needs: [build-macos]
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: [ubuntu-22.04]

    steps:
    - uses: actions/checkout@v4
      with:
       repository: 'FloatingArrayDesign/MoorDyn'

    - name: moordyn_version
      id: moordyn_version
      shell: bash
      run: |
        major=`cat CMakeLists.txt | grep MOORDYN_MAJOR_VERSION | head -1 | awk -F' ' '{print $2}' | awk -F')' '{print $1}'`
        minor=`cat CMakeLists.txt | grep MOORDYN_MINOR_VERSION | head -1 | awk -F' ' '{print $2}' | awk -F')' '{print $1}'`
        patch=`cat CMakeLists.txt | grep MOORDYN_PATCH_VERSION | head -1 | awk -F' ' '{print $2}' | awk -F')' '{print $1}'`
        echo "moordyn_version=$major.$minor.$patch" >> $GITHUB_OUTPUT

    - name: Setup GCC Fortran (Linux)
      run: |
        sudo apt-get update
        sudo apt-get install -y gfortran

    - name: Configure CMake (Linux), build, and install
      run: |
        mkdir -p ${{ github.workspace }}/install-${{ matrix.os }}
        cmake -B ${{github.workspace}}/build-${{ matrix.os }} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install-${{ matrix.os }} -DPYTHON_WRAPPER=OFF -DUSE_VTK=OFF -DBUILD_TESTING=OFF
        cmake --build ${{ github.workspace }}/build-${{ matrix.os }} --config ${{env.BUILD_TYPE}}
        cmake --install ${{ github.workspace }}/build-${{ matrix.os }} --config ${{env.BUILD_TYPE}}

    - name: Create Installer
      working-directory: ${{ github.workspace }}/build-${{ matrix.os }}
      shell: bash
      # Package the installer
      run: cpack -C ${{env.BUILD_TYPE}}

    - name: Test - list install/lib folder-linux
      working-directory: ${{ github.workspace }}/install-${{ matrix.os }}/lib
      # We are just testing in Linux
      run: 
        ls

    # Step 4: Upload the generated files
    - name: Upload generated files - Linux
      uses: actions/upload-artifact@v4
      with:
        name: generated-libraries-linux
        path: |
          ${{ github.workspace }}/install-${{ matrix.os }}/lib/*libmoordyn*